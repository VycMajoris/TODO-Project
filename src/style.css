:root {
  --main-clr-100: rgb(34, 48, 60);
  --main-clr-500: rgb(25, 39, 52);
  --main-clr-900: rgb(21, 32, 43);
  --secondary-clr-100: rgb(42, 189, 103);
  --secondary-clr-500: rgb(31, 141, 77);
  --secondary-clr-900: rgb(30, 101, 69);
}

*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
    2. Remove default margin
  */
* {
  margin: 0;
}
/*
    3. Allow percentage-based heights in the application
  */
html,
body {
  height: 100%;
}
/*
    Typographic tweaks!
    4. Add accessible line-height
    5. Improve text rendering
  */
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
    6. Improve media defaults
  */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
    7. Remove built-in form typography styles
  */
input,
button,
textarea,
select {
  font: inherit;
}
/*
    8. Avoid text overflows
  */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
    9. Create a root stacking context
  */
#root,
#__next {
  isolation: isolate;
}

/*********** Page Container **********/

.page-container {
  height: 100dvh;
  display: grid;
  grid-template-rows: 4rem 1fr 2rem;
}

/*************** Header, Footer **************/

header,
footer {
  background-color: var(--main-clr-100);
  color: var(--secondary-clr-500);
  font-size: 2rem;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.header-title {
  display: flex;
  align-items: center;
  flex-grow: 1;
}

.header-divider {
  height: 0.125rem;
  width: 100%;
  background-color: var(--secondary-clr-100);
}

footer {
  font-size: 1.25rem;
}

/*************** Main **************/

main {
  display: grid;
  grid-template-columns: 15fr 85fr;
  background-color: var(--main-clr-500);
  color: white;
}

/****** Left Panel *****/

.left-panel {
  background-color: var(--main-clr-900);
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
}

.title-container {
  display: flex;
  flex-direction: column;
  gap: 0.125rem;
}

.titles {
  font-size: 1.5rem;
}

.divider {
  background-color: white;
  height: 0.125rem;
  width: 100%;
}

.filter-section,
.project-section {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.add-project-btn {
  padding: 0.25rem 0.75rem;
  max-width: max-content;
  align-self: center;
}

.add-project-form {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.project-name-input {
  flex-basis: 100%;
  flex-grow: 1;
}

.add-btn,
.cancel-btn {
  display: inline-block;
  justify-content: center;
  align-items: center;
}

.add-project-popup-div {
  display: none;
}

.individual-project-container {
  width: 80%;
  height: 2rem;
  margin: 1rem;
  background-color: red;
  color: white;
}

/****** Right Panel *****/

.right-panel {
  background-color: inherit;
  padding: 1.5rem 2.5rem;
  display: grid;
  grid-template-rows: 6% 1fr;
  gap: 1.25rem;
}

.filter-display-div {
  background-color: var(--secondary-clr-100);
  padding: 1rem;
}

.todo-list-container {
  display: flex;
  flex-direction: column;
  gap: 1.25rem;
  padding: 1rem;
}

.tasks-container {
  display: flex;
  flex-direction: column;
  gap: 1.25rem;
}
.todo-display-container {
  display: flex;
  border: 2px solid rgb(255, 255, 255);
  gap: 2rem;
  padding: 1rem;
}

.todo-display-container img {
  min-width: 24px;
}

.todo-display-left {
  display: flex;
  flex-grow: 1;
  gap: 1rem;
  align-items: center;
}

.todo-display-right {
  display: flex;
  align-items: center;
  gap: 1rem;
}

/**** TASK POPUP ****/

.task-popup,
.edit-task-popup {
  display: none;
}

.add-task-form,
.edit-task-form {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.task-btn-container {
  display: flex;
  justify-content: center;
  gap: 0.75rem;
  margin-top: 0.25rem;
}

.unchecked,
.checked {
  min-height: 24px;
  max-height: 48px;
  border-color: white;
}
